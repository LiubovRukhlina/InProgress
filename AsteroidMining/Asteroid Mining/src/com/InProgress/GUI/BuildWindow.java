package com.InProgress.GUI;

import com.InProgress.Model.Game;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.util.ArrayList;

/**
 * GUI class. The window is created when the user clicks the "Build/Deploy" button in the game window.
 * The window shows option to build Robots, Gates or the Space Station. The user can also choose to deploy a TransportGate.
 * The user input is forwarded to the controllerExternal method in the Game class to update the game.
 * @author InProgress
 */
public class BuildWindow extends javax.swing.JFrame {

    GameWindow previous;

    /**
     * Creates new form BuildingMessage
     */
    public BuildWindow(GameWindow game) {
        this.previous = game;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        // Instantiate components
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        robotButton = new javax.swing.JButton();
        gatesButton = new javax.swing.JButton();
        spaceStationButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        deployGateButton = new javax.swing.JButton();

        // window settings
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Building Message");
        setResizable(false);

        // set up labels
        jLabel1.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 204, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("What should be built/deployed?");

        //  set up buttons
        robotButton.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        robotButton.setText("Build Robot");
        robotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                robotButtonActionPerformed(evt);
            }
        });

        gatesButton.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        gatesButton.setText("Build Gates");
        gatesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gatesButtonActionPerformed(evt);
            }
        });

        deployGateButton.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        deployGateButton.setText("Deploy Gate");
        deployGateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deployGateButtonActionPerformed(evt);
            }
        });

        spaceStationButton.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        spaceStationButton.setText("Build SpaceStation");
        spaceStationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spaceStationButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        // <editor-fold desc="Grouping Components">
        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(127, 127, 127)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(deployGateButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(spaceStationButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(robotButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(gatesButton, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                                                .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addContainerGap(122, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jLabel1)
                                .addGap(56, 56, 56)
                                .addComponent(robotButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gatesButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deployGateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spaceStationButton)
                                .addGap(35, 35, 35)
                                .addComponent(cancelButton)
                                .addContainerGap(52, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        // </editor-fold>

        pack();
    }
	// </editor-fold>

    //<editor-fold desc="ActionListeners">

	/**
     * Calls Game.controllerExternal() to build Robot when the button "Robot" is clicked.
     * Updates the game window.
     *
     * @param evt click event
     */
    private void robotButtonActionPerformed(ActionEvent evt) {
        ArrayList<String> defaultList = new ArrayList<>();

        Game.controllerExternal(7, defaultList);

        Game.gameWindow = new GameWindow();
        Game.gameWindow.initialize();
        previous.setVisible(false);
        previous.dispose();
        dispose();
    }

	/**
     * Calls Game.controllerExternal() to build Gates when the button "Transport Gates" is clicked.
     * Updates the game window.
     *
     * @param evt click event
     */
    private void gatesButtonActionPerformed(ActionEvent evt) {
        ArrayList<String> defaultList = new ArrayList<>();

        Game.controllerExternal(8, defaultList);

        Game.gameWindow = new GameWindow();
        Game.gameWindow.initialize();
        previous.setVisible(false);
        previous.dispose();
        dispose();
    }

	/**
     * Calls Game.controllerExternal() to deploy Gate from the inventory to the asteroid  when the button "Deploy Gate" is clicked.
     * Updates the game window.
     *
     * @param evt click event
     */
    private void deployGateButtonActionPerformed(ActionEvent evt) {
        ArrayList<String> defaultList = new ArrayList<>();

        Game.controllerExternal(10, defaultList);

        Game.gameWindow = new GameWindow();
        Game.gameWindow.initialize();
        previous.setVisible(false);
        previous.dispose();
        dispose();
    }

	/**
     * Calls Game.controllerExternal() to build Space Station when the button "Space Station" is clicked.
     * Updates the game window.
     *
     * @param evt click event
     */
    private void spaceStationButtonActionPerformed(ActionEvent evt) {
        ArrayList<String> defaultList = new ArrayList<>();

        Game.controllerExternal(9, defaultList);

        previous.setVisible(false);
        previous.dispose();
        dispose();
    }

    /**
     * Closes the window when the "Cancel" is clicked.
	 *
     * @param evt click event
     */
    private void cancelButtonActionPerformed(ActionEvent evt) {
        setVisible(false);
        dispose();
    }
    //</editor-fold>

    /**
     * Initializes BuildWindow window and makes it visible.
     *
     * @param game current Game window
     */
    public void initialize(GameWindow game) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuildWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuildWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuildWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuildWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuildWindow(game).setVisible(true);
            }
        });
    }

    //<editor-fold desc="Variables">
    // Variables declaration - do not modify
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton gatesButton;
    private javax.swing.JButton deployGateButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton robotButton;
    private javax.swing.JButton spaceStationButton;
    //</editor-fold>

}
