package com.InProgress;

import java.util.ArrayList;

public class Player {

    //<editor-fold desc="Attributes">
    private int playerID;
    private int numberOfMoves;
    private ArrayList<Settler> settlers;
    private Boolean isPlaying;

    //<editor-fold desc="Constructor"

    /**
     * Constructor of the Player class
     */

    public Player(int playerID) {
        this.playerID = playerID;
    }

    //</editor-fold>


    //<editor-fold desc="Methods">

    /**
     * checkSettlers()
     * returns true if the player has alive settlers.
     * returns false if all the settlers of the player are dead.
     */


    public boolean checkSettlers() {
        int cnt = settlers.size();
        for (int i = 0; i < settlers.size(); i++) {
            if (!settlers.get(i).getAlive())
                cnt--;
        }
        if (cnt == 0) {
            endMyTurn();
            return false;
        } else {
            return true;
        }
    }

    /**
     * to end a players turn.
     * can be called if
     * 1. all the settlers of this player die
     * 2. runs out of moves.
     */
    public void endMyTurn() {
        int cnt = settlers.size(); // to avoid a recursion ( if it is called when number of moves = 0, it should check the number of settlers too)
        for (int i = 0; i < settlers.size(); i++) { // as inside checkSettlers() endMyTurn() is called.
            if (!settlers.get(i).getAlive())
                cnt--;
        }
        if (cnt == 0)
            isPlaying = false;
        else {
            isPlaying = true;
        }
        Game.nextRound();
    }

    /**
     * decreases the number pf moves of the player.
     * if the player runs out of moves then the turn ends.
     */
    public void decreaseNumberOfMoves() {
        numberOfMoves--;
        if (numberOfMoves == 0)
            endMyTurn();
    }

    //</editor-fold>


    //<editor-fold desc="Getters and Setters">


    public int getNumberOfMoves() {
        return numberOfMoves;
    }

    public void setNumberOfMoves(int numberOfMoves) {
        this.numberOfMoves = numberOfMoves;
    }

    public int getPlayerID() {
        return playerID;
    }

    public void setPlayerID(int playerID) {
        this.playerID = playerID;
    }

    public ArrayList<Settler> getSettlers() {
        return settlers;
    }

    public void setSettlers(ArrayList<Settler> settlers) {
        this.settlers = settlers;
    }
}
